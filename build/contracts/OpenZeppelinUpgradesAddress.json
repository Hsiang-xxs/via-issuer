{
  "contractName": "OpenZeppelinUpgradesAddress",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\\r  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\\r This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\\r when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\\r build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\\r\"}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/upgrades/contracts/utils/Address.sol\":\"OpenZeppelinUpgradesAddress\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/upgrades/contracts/utils/Address.sol\":{\"keccak256\":\"0xf1342cab1be5df2f6b8ac867bc3f8e098cee5c2e7eb5b3b2bdd2df0ae294aeb4\",\"urls\":[\"bzzr://4dc50d6fb392c96d6925c6c3aefb5a3c5a9f03749e76428b1fbc55d511c97a1d\"]}},\"version\":1}",
  "bytecode": "0x604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820f29e3fe3f475f892006df01162526e6389af33075a0c571ea4e9ee54432fbe1c0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820f29e3fe3f475f892006df01162526e6389af33075a0c571ea4e9ee54432fbe1c0029",
  "sourceMap": "536:1036:20:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "536:1036:20:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n *\r\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\r\n * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\r\n * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\r\n * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\r\n */\r\nlibrary OpenZeppelinUpgradesAddress {\r\n    /**\r\n     * Returns whether the target address is a contract\r\n     * @dev This function will return false if invoked during the constructor of a contract,\r\n     * as the code is not actually created until after the constructor finishes.\r\n     * @param account address of the account to check\r\n     * @return whether the target address is a contract\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // XXX Currently there is no better way to check if there is a contract in an address\r\n        // than to check the size of the code at that address.\r\n        // See https://ethereum.stackexchange.com/a/14016/36603\r\n        // for more details about how this works.\r\n        // TODO Check this again before the Serenity release, because all addresses will be\r\n        // contracts then.\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n",
  "sourcePath": "@openzeppelin\\upgrades\\contracts\\utils\\Address.sol",
  "ast": {
    "absolutePath": "@openzeppelin/upgrades/contracts/utils/Address.sol",
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        13853
      ]
    },
    "id": 13854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13836,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\r\n\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\r\nThis contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\r\nwhen the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\r\nbuild/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\r",
        "fullyImplemented": true,
        "id": 13853,
        "linearizedBaseContracts": [
          13853
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13851,
              "nodeType": "Block",
              "src": "1008:561:20",
              "statements": [
                {
                  "assignments": [
                    13844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13844,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 13851,
                      "src": "1019:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1019:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13845,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1019:12:20"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 13844,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1506:4:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 13838,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1526:7:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 13846,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1495:57:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13847,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13844,
                      "src": "1553:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1560:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1553:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13842,
                  "id": 13850,
                  "nodeType": "Return",
                  "src": "1546:15:20"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\nas the code is not actually created until after the constructor finishes.\r\n@param account address of the account to check\r\n@return whether the target address is a contract\r",
            "id": 13852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13838,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 13852,
                  "src": "962:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:17:20"
            },
            "returnParameters": {
              "id": 13842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13852,
                  "src": "1002:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13840,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1001:6:20"
            },
            "scope": 13853,
            "src": "942:627:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 13854,
        "src": "536:1036:20"
      }
    ],
    "src": "0:1574:20"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/upgrades/contracts/utils/Address.sol",
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        13853
      ]
    },
    "id": 13854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13836,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\r\n\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\r\nThis contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\r\nwhen the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\r\nbuild/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\r",
        "fullyImplemented": true,
        "id": 13853,
        "linearizedBaseContracts": [
          13853
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13851,
              "nodeType": "Block",
              "src": "1008:561:20",
              "statements": [
                {
                  "assignments": [
                    13844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13844,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 13851,
                      "src": "1019:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1019:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13845,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1019:12:20"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 13844,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1506:4:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 13838,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1526:7:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 13846,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1495:57:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13847,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13844,
                      "src": "1553:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1560:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1553:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13842,
                  "id": 13850,
                  "nodeType": "Return",
                  "src": "1546:15:20"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\nas the code is not actually created until after the constructor finishes.\r\n@param account address of the account to check\r\n@return whether the target address is a contract\r",
            "id": 13852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13838,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 13852,
                  "src": "962:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:17:20"
            },
            "returnParameters": {
              "id": 13842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13852,
                  "src": "1002:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13840,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1001:6:20"
            },
            "scope": 13853,
            "src": "942:627:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 13854,
        "src": "536:1036:20"
      }
    ],
    "src": "0:1574:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-14T10:51:14.871Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Utility library of inline functions on addresses\r  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\r This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\r when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\r build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\r"
  }
}